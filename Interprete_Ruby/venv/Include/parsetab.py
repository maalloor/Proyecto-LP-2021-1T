
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ADD ALIAS AND APOST ASSIGN BEGIN BLOCKCOMMENT BREAK CLASS COMMA COMMENT DEF DIFFERENT DIVIDE DO DOT DQUOTE ELSE ELSIF END EQUALS FALSE FLOAT FOR GETS GLOBALID GREATER GREATEREQUAL ID IF IN INSTANCEID INTEGER LBRACKET LESS LESSEQUAL LPAREN MODULUS MULTIPLY NIL NOT OR PRINT PUTS RBRACKET RPAREN STRING SUBSTRACT THEN TRUE WHILEinstruction : imprint\n                    | expression\n                    | sentence\n                    | assignmentimprint : PRINT expression\n                | PUTS expressionexpression : expression ADD term\n                    | expression SUBSTRACT term\n                    | termterm : term MULTIPLY factor\n            | term DIVIDE factor\n            | factorsentence : WHILE comparison DO instruction END\n                | WHILE comparison OR comparison DO instruction END\n                | WHILE comparison AND comparison DO instruction ENDsentence : FOR ID IN factor DOT DOT factor instruction END\n                | FOR ID IN ID instruction ENDsentence : IF comparison instruction END\n                | IF comparison OR comparison instruction END\n                | IF comparison AND comparison instruction END\n                | IF comparison instruction ELSE instruction END\n                | IF comparison instruction ELSIF instruction ELSE instruction ENDcomparison : factor EQUALS factor\n                    | factor DIFFERENT factor\n                    | factor LESS factor\n                    | factor GREATER factor\n                    | factor GREATEREQUAL factor\n                    | factor LESSEQUAL factorassignment : ID ASSIGN expression\n                    | GLOBALID ASSIGN expression\n                    | INSTANCEID ASSIGN expressionassignment : ID ASSIGN LBRACKET factor COMMA factor COMMA factor COMMA factor RBRACKETfactor : INTEGER\n                | FLOAT\n                | STRING\n                | ID\n                | GLOBALID\n                | INSTANCEID\n                | FALSE\n                | TRUE'
    
_lr_action_items = {'PRINT':([0,16,17,18,19,20,24,25,26,34,41,61,62,63,64,65,66,67,71,72,73,74,76,77,91,96,],[6,-33,-34,-35,-39,-40,-36,-37,-38,6,6,-23,-24,-25,-26,-27,-28,6,6,6,6,6,6,6,6,6,]),'PUTS':([0,16,17,18,19,20,24,25,26,34,41,61,62,63,64,65,66,67,71,72,73,74,76,77,91,96,],[7,-33,-34,-35,-39,-40,-36,-37,-38,7,7,-23,-24,-25,-26,-27,-28,7,7,7,7,7,7,7,7,7,]),'WHILE':([0,16,17,18,19,20,24,25,26,34,41,61,62,63,64,65,66,67,71,72,73,74,76,77,91,96,],[9,-33,-34,-35,-39,-40,-36,-37,-38,9,9,-23,-24,-25,-26,-27,-28,9,9,9,9,9,9,9,9,9,]),'FOR':([0,16,17,18,19,20,24,25,26,34,41,61,62,63,64,65,66,67,71,72,73,74,76,77,91,96,],[10,-33,-34,-35,-39,-40,-36,-37,-38,10,10,-23,-24,-25,-26,-27,-28,10,10,10,10,10,10,10,10,10,]),'IF':([0,16,17,18,19,20,24,25,26,34,41,61,62,63,64,65,66,67,71,72,73,74,76,77,91,96,],[13,-33,-34,-35,-39,-40,-36,-37,-38,13,13,-23,-24,-25,-26,-27,-28,13,13,13,13,13,13,13,13,13,]),'ID':([0,6,7,9,10,13,16,17,18,19,20,21,22,24,25,26,28,29,33,34,35,36,41,42,43,44,45,46,47,48,49,50,52,54,55,61,62,63,64,65,66,67,71,72,73,74,76,77,80,88,91,96,97,103,],[11,24,24,24,32,24,-33,-34,-35,-39,-40,24,24,-36,-37,-38,24,24,24,11,24,24,11,24,24,24,24,24,24,24,24,67,24,24,24,-23,-24,-25,-26,-27,-28,11,11,11,11,11,11,11,24,24,11,11,24,24,]),'GLOBALID':([0,6,7,9,13,16,17,18,19,20,21,22,24,25,26,28,29,33,34,35,36,41,42,43,44,45,46,47,48,49,50,52,54,55,61,62,63,64,65,66,67,71,72,73,74,76,77,80,88,91,96,97,103,],[14,25,25,25,25,-33,-34,-35,-39,-40,25,25,-36,-37,-38,25,25,25,14,25,25,14,25,25,25,25,25,25,25,25,25,25,25,25,-23,-24,-25,-26,-27,-28,14,14,14,14,14,14,14,25,25,14,14,25,25,]),'INSTANCEID':([0,6,7,9,13,16,17,18,19,20,21,22,24,25,26,28,29,33,34,35,36,41,42,43,44,45,46,47,48,49,50,52,54,55,61,62,63,64,65,66,67,71,72,73,74,76,77,80,88,91,96,97,103,],[15,26,26,26,26,-33,-34,-35,-39,-40,26,26,-36,-37,-38,26,26,26,15,26,26,15,26,26,26,26,26,26,26,26,26,26,26,26,-23,-24,-25,-26,-27,-28,15,15,15,15,15,15,15,26,26,15,15,26,26,]),'INTEGER':([0,6,7,9,13,16,17,18,19,20,21,22,24,25,26,28,29,33,34,35,36,41,42,43,44,45,46,47,48,49,50,52,54,55,61,62,63,64,65,66,67,71,72,73,74,76,77,80,88,91,96,97,103,],[16,16,16,16,16,-33,-34,-35,-39,-40,16,16,-36,-37,-38,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-23,-24,-25,-26,-27,-28,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'FLOAT':([0,6,7,9,13,16,17,18,19,20,21,22,24,25,26,28,29,33,34,35,36,41,42,43,44,45,46,47,48,49,50,52,54,55,61,62,63,64,65,66,67,71,72,73,74,76,77,80,88,91,96,97,103,],[17,17,17,17,17,-33,-34,-35,-39,-40,17,17,-36,-37,-38,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,-23,-24,-25,-26,-27,-28,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'STRING':([0,6,7,9,13,16,17,18,19,20,21,22,24,25,26,28,29,33,34,35,36,41,42,43,44,45,46,47,48,49,50,52,54,55,61,62,63,64,65,66,67,71,72,73,74,76,77,80,88,91,96,97,103,],[18,18,18,18,18,-33,-34,-35,-39,-40,18,18,-36,-37,-38,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-23,-24,-25,-26,-27,-28,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'FALSE':([0,6,7,9,13,16,17,18,19,20,21,22,24,25,26,28,29,33,34,35,36,41,42,43,44,45,46,47,48,49,50,52,54,55,61,62,63,64,65,66,67,71,72,73,74,76,77,80,88,91,96,97,103,],[19,19,19,19,19,-33,-34,-35,-39,-40,19,19,-36,-37,-38,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-23,-24,-25,-26,-27,-28,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'TRUE':([0,6,7,9,13,16,17,18,19,20,21,22,24,25,26,28,29,33,34,35,36,41,42,43,44,45,46,47,48,49,50,52,54,55,61,62,63,64,65,66,67,71,72,73,74,76,77,80,88,91,96,97,103,],[20,20,20,20,20,-33,-34,-35,-39,-40,20,20,-36,-37,-38,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-23,-24,-25,-26,-27,-28,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'$end':([1,2,3,4,5,8,11,12,14,15,16,17,18,19,20,23,24,25,26,27,37,38,39,40,51,56,57,70,75,87,90,92,93,94,95,101,102,105,],[0,-1,-2,-3,-4,-9,-36,-12,-37,-38,-33,-34,-35,-39,-40,-5,-36,-37,-38,-6,-7,-8,-10,-11,-29,-30,-31,-18,-13,-17,-21,-19,-20,-14,-15,-22,-16,-32,]),'END':([2,3,4,5,8,11,12,14,15,16,17,18,19,20,23,24,25,26,27,37,38,39,40,51,53,56,57,58,70,75,78,81,83,84,85,86,87,90,92,93,94,95,98,99,101,102,105,],[-1,-2,-3,-4,-9,-36,-12,-37,-38,-33,-34,-35,-39,-40,-5,-36,-37,-38,-6,-7,-8,-10,-11,-29,70,-30,-31,75,-18,-13,87,90,92,93,94,95,-17,-21,-19,-20,-14,-15,101,102,-22,-16,-32,]),'ELSE':([2,3,4,5,8,11,12,14,15,16,17,18,19,20,23,24,25,26,27,37,38,39,40,51,53,56,57,70,75,82,87,90,92,93,94,95,101,102,105,],[-1,-2,-3,-4,-9,-36,-12,-37,-38,-33,-34,-35,-39,-40,-5,-36,-37,-38,-6,-7,-8,-10,-11,-29,71,-30,-31,-18,-13,91,-17,-21,-19,-20,-14,-15,-22,-16,-32,]),'ELSIF':([2,3,4,5,8,11,12,14,15,16,17,18,19,20,23,24,25,26,27,37,38,39,40,51,53,56,57,70,75,87,90,92,93,94,95,101,102,105,],[-1,-2,-3,-4,-9,-36,-12,-37,-38,-33,-34,-35,-39,-40,-5,-36,-37,-38,-6,-7,-8,-10,-11,-29,72,-30,-31,-18,-13,-17,-21,-19,-20,-14,-15,-22,-16,-32,]),'ADD':([3,8,11,12,14,15,16,17,18,19,20,23,24,25,26,27,37,38,39,40,51,56,57,],[21,-9,-36,-12,-37,-38,-33,-34,-35,-39,-40,21,-36,-37,-38,21,-7,-8,-10,-11,21,21,21,]),'SUBSTRACT':([3,8,11,12,14,15,16,17,18,19,20,23,24,25,26,27,37,38,39,40,51,56,57,],[22,-9,-36,-12,-37,-38,-33,-34,-35,-39,-40,22,-36,-37,-38,22,-7,-8,-10,-11,22,22,22,]),'MULTIPLY':([8,11,12,14,15,16,17,18,19,20,24,25,26,37,38,39,40,],[28,-36,-12,-37,-38,-33,-34,-35,-39,-40,-36,-37,-38,28,28,-10,-11,]),'DIVIDE':([8,11,12,14,15,16,17,18,19,20,24,25,26,37,38,39,40,],[29,-36,-12,-37,-38,-33,-34,-35,-39,-40,-36,-37,-38,29,29,-10,-11,]),'ASSIGN':([11,14,15,],[33,35,36,]),'EQUALS':([16,17,18,19,20,24,25,26,31,],[-33,-34,-35,-39,-40,-36,-37,-38,44,]),'DIFFERENT':([16,17,18,19,20,24,25,26,31,],[-33,-34,-35,-39,-40,-36,-37,-38,45,]),'LESS':([16,17,18,19,20,24,25,26,31,],[-33,-34,-35,-39,-40,-36,-37,-38,46,]),'GREATER':([16,17,18,19,20,24,25,26,31,],[-33,-34,-35,-39,-40,-36,-37,-38,47,]),'GREATEREQUAL':([16,17,18,19,20,24,25,26,31,],[-33,-34,-35,-39,-40,-36,-37,-38,48,]),'LESSEQUAL':([16,17,18,19,20,24,25,26,31,],[-33,-34,-35,-39,-40,-36,-37,-38,49,]),'DO':([16,17,18,19,20,24,25,26,30,59,60,61,62,63,64,65,66,],[-33,-34,-35,-39,-40,-36,-37,-38,41,76,77,-23,-24,-25,-26,-27,-28,]),'OR':([16,17,18,19,20,24,25,26,30,34,61,62,63,64,65,66,],[-33,-34,-35,-39,-40,-36,-37,-38,42,54,-23,-24,-25,-26,-27,-28,]),'AND':([16,17,18,19,20,24,25,26,30,34,61,62,63,64,65,66,],[-33,-34,-35,-39,-40,-36,-37,-38,43,55,-23,-24,-25,-26,-27,-28,]),'DOT':([16,17,18,19,20,25,26,67,68,79,],[-33,-34,-35,-39,-40,-37,-38,-36,79,88,]),'COMMA':([16,17,18,19,20,24,25,26,69,89,100,],[-33,-34,-35,-39,-40,-36,-37,-38,80,97,103,]),'RBRACKET':([16,17,18,19,20,24,25,26,104,],[-33,-34,-35,-39,-40,-36,-37,-38,105,]),'IN':([32,],[50,]),'LBRACKET':([33,],[52,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instruction':([0,34,41,67,71,72,73,74,76,77,91,96,],[1,53,58,78,81,82,83,84,85,86,98,99,]),'imprint':([0,34,41,67,71,72,73,74,76,77,91,96,],[2,2,2,2,2,2,2,2,2,2,2,2,]),'expression':([0,6,7,33,34,35,36,41,67,71,72,73,74,76,77,91,96,],[3,23,27,51,3,56,57,3,3,3,3,3,3,3,3,3,3,]),'sentence':([0,34,41,67,71,72,73,74,76,77,91,96,],[4,4,4,4,4,4,4,4,4,4,4,4,]),'assignment':([0,34,41,67,71,72,73,74,76,77,91,96,],[5,5,5,5,5,5,5,5,5,5,5,5,]),'term':([0,6,7,21,22,33,34,35,36,41,67,71,72,73,74,76,77,91,96,],[8,8,8,37,38,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'factor':([0,6,7,9,13,21,22,28,29,33,34,35,36,41,42,43,44,45,46,47,48,49,50,52,54,55,67,71,72,73,74,76,77,80,88,91,96,97,103,],[12,12,12,31,31,12,12,39,40,12,12,12,12,12,31,31,61,62,63,64,65,66,68,69,31,31,12,12,12,12,12,12,12,89,96,12,12,100,104,]),'comparison':([9,13,42,43,54,55,],[30,34,59,60,73,74,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instruction","S'",1,None,None,None),
  ('instruction -> imprint','instruction',1,'p_instruction','parser.py',6),
  ('instruction -> expression','instruction',1,'p_instruction','parser.py',7),
  ('instruction -> sentence','instruction',1,'p_instruction','parser.py',8),
  ('instruction -> assignment','instruction',1,'p_instruction','parser.py',9),
  ('imprint -> PRINT expression','imprint',2,'p_imprint','parser.py',12),
  ('imprint -> PUTS expression','imprint',2,'p_imprint','parser.py',13),
  ('expression -> expression ADD term','expression',3,'p_expression','parser.py',16),
  ('expression -> expression SUBSTRACT term','expression',3,'p_expression','parser.py',17),
  ('expression -> term','expression',1,'p_expression','parser.py',18),
  ('term -> term MULTIPLY factor','term',3,'p_term','parser.py',20),
  ('term -> term DIVIDE factor','term',3,'p_term','parser.py',21),
  ('term -> factor','term',1,'p_term','parser.py',22),
  ('sentence -> WHILE comparison DO instruction END','sentence',5,'p_sentence_while','parser.py',25),
  ('sentence -> WHILE comparison OR comparison DO instruction END','sentence',7,'p_sentence_while','parser.py',26),
  ('sentence -> WHILE comparison AND comparison DO instruction END','sentence',7,'p_sentence_while','parser.py',27),
  ('sentence -> FOR ID IN factor DOT DOT factor instruction END','sentence',9,'p_sentence_for','parser.py',30),
  ('sentence -> FOR ID IN ID instruction END','sentence',6,'p_sentence_for','parser.py',31),
  ('sentence -> IF comparison instruction END','sentence',4,'p_sentence_if','parser.py',34),
  ('sentence -> IF comparison OR comparison instruction END','sentence',6,'p_sentence_if','parser.py',35),
  ('sentence -> IF comparison AND comparison instruction END','sentence',6,'p_sentence_if','parser.py',36),
  ('sentence -> IF comparison instruction ELSE instruction END','sentence',6,'p_sentence_if','parser.py',37),
  ('sentence -> IF comparison instruction ELSIF instruction ELSE instruction END','sentence',8,'p_sentence_if','parser.py',38),
  ('comparison -> factor EQUALS factor','comparison',3,'p_comparison','parser.py',41),
  ('comparison -> factor DIFFERENT factor','comparison',3,'p_comparison','parser.py',42),
  ('comparison -> factor LESS factor','comparison',3,'p_comparison','parser.py',43),
  ('comparison -> factor GREATER factor','comparison',3,'p_comparison','parser.py',44),
  ('comparison -> factor GREATEREQUAL factor','comparison',3,'p_comparison','parser.py',45),
  ('comparison -> factor LESSEQUAL factor','comparison',3,'p_comparison','parser.py',46),
  ('assignment -> ID ASSIGN expression','assignment',3,'p_assignment','parser.py',49),
  ('assignment -> GLOBALID ASSIGN expression','assignment',3,'p_assignment','parser.py',50),
  ('assignment -> INSTANCEID ASSIGN expression','assignment',3,'p_assignment','parser.py',51),
  ('assignment -> ID ASSIGN LBRACKET factor COMMA factor COMMA factor COMMA factor RBRACKET','assignment',11,'p_assignment_array','parser.py',54),
  ('factor -> INTEGER','factor',1,'p_factor','parser.py',57),
  ('factor -> FLOAT','factor',1,'p_factor','parser.py',58),
  ('factor -> STRING','factor',1,'p_factor','parser.py',59),
  ('factor -> ID','factor',1,'p_factor','parser.py',60),
  ('factor -> GLOBALID','factor',1,'p_factor','parser.py',61),
  ('factor -> INSTANCEID','factor',1,'p_factor','parser.py',62),
  ('factor -> FALSE','factor',1,'p_factor','parser.py',63),
  ('factor -> TRUE','factor',1,'p_factor','parser.py',64),
]
